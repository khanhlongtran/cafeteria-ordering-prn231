@page
@model CafeteriaOrderingFrontend.Pages.MenuModel
@{
    ViewData["Title"] = "Menu Management";
}

<div class="container-fluid">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1">Menu Management</h2>
            <p class="text-muted mb-0">Manage your restaurant's menu items</p>
        </div>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createMenuModal">
            <i class="fas fa-plus-circle me-2"></i>Add New Menu
        </button>
    </div>

    <!-- Alert Messages -->
    @if (!string.IsNullOrEmpty(Model.Message))
    {
        <div class="alert @(Model.IsSuccess ? "alert-success" : "alert-danger") alert-dismissible fade show" role="alert">
            <i class="@(Model.IsSuccess ? "fas fa-check-circle" : "fas fa-exclamation-circle") me-2"></i>
            @Model.Message
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        <!-- Menu List -->
        <div class="col-lg-8">
            @if (Model.Menus == null || !Model.Menus.Any())
            {
                <div class="text-center py-5">
                    <i class="fas fa-utensils fa-3x mb-3" style="color: var(--primary-color)"></i>
                    <h4>No Menus Available</h4>
                    <p class="text-muted">Start by adding your first menu!</p>
                </div>
            }
            else
            {
                <div class="row">
                    @foreach (var menu in Model.Menus)
                    {
                        <div class="col-md-6 mb-4">
                            <div class="card h-100">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start mb-3">
                                        <h5 class="card-title mb-0">@menu.MenuName</h5>
                                        <span class="badge @(menu.IsStatus == true ? "bg-success" : "bg-danger")">
                                            @(menu.IsStatus == true ? "Active" : "Inactive")
                                        </span>
                                    </div>
                                    <p class="card-text text-muted">@menu.Description</p>
                                    <div class="mt-3 pt-3 border-top">
                                        <small class="text-muted">
                                            <i class="far fa-clock me-1"></i>
                                            Created: @menu.CreatedAt.ToString("MMM dd, yyyy")
                                        </small>
                                        <div class="mt-2">
                                            <button class="btn btn-sm btn-outline-primary me-2" onclick="editMenu(@menu.MenuId)">
                                                <i class="fas fa-edit me-1"></i>Edit
                                            </button>
                                            <form method="post" asp-page-handler="DeleteMenu" asp-route-menuId="@menu.MenuId" 
                                                  onsubmit="return confirm('Are you sure you want to delete this menu?');" 
                                                  style="display: inline;">
                                                <button type="submit" class="btn btn-sm btn-outline-danger">
                                                    <i class="fas fa-trash-alt me-1"></i>Delete
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>

        <!-- Stats Card -->
        <div class="col-lg-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title mb-4">Menu Statistics</h5>
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <div>
                            <h6 class="text-muted mb-1">Total Menus</h6>
                            <h3 class="mb-0">@(Model.Menus?.Count ?? 0)</h3>
                        </div>
                        <div class="bg-light rounded-circle p-3">
                            <i class="fas fa-book-open fa-2x text-primary"></i>
                        </div>
                    </div>
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-muted mb-1">Active Menus</h6>
                            <span class="fw-bold">@(Model.Menus?.Count(m => m.IsStatus == true) ?? 0)</span>
                        </div>
                        <div class="bg-light rounded-circle p-3">
                            <i class="fas fa-check-circle fa-2x text-success"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Menu Modal -->
<div class="modal fade" id="createMenuModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Menu</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="post" asp-page-handler="CreateMenu">
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Menu Name</label>
                        <input type="text" class="form-control" asp-for="NewMenu.MenuName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" asp-for="NewMenu.Description" rows="3"></textarea>
                    </div>
                    <input type="hidden" asp-for="NewMenu.ManagerId" value="1" />
                    <div class="mb-3">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" 
                                   id="newMenuStatus"
                                   name="NewMenu.IsStatus"
                                   @(Model.NewMenu?.IsStatus == true ? "checked" : "")>
                            <label class="form-check-label" for="newMenuStatus">Active</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Menu Modal -->
<div class="modal fade" id="editMenuModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Menu</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="post" asp-page-handler="UpdateMenu">
                <input type="hidden" asp-for="EditingMenu.MenuId">
                <input type="hidden" asp-for="EditingMenu.ManagerId" value="1" />
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Menu Name</label>
                        <input type="text" class="form-control" asp-for="EditingMenu.MenuName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" asp-for="EditingMenu.Description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" 
                                   id="editMenuStatus"
                                   name="EditingMenu.IsStatus"
                                   @(Model.EditingMenu?.IsStatus == true ? "checked" : "")>
                            <label class="form-check-label" for="editMenuStatus">Active</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function editMenu(menuId) {
            // Show the edit modal
            var editModal = new bootstrap.Modal(document.getElementById('editMenuModal'));
            
            // Fetch menu details and populate the form
            fetch(`${window.location.pathname}?handler=EditMenu&menuId=${menuId}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('EditingMenu_MenuId').value = data.menuId;
                    document.getElementById('EditingMenu_MenuName').value = data.menuName;
                    document.getElementById('EditingMenu_Description').value = data.description;
                    document.getElementById('EditingMenu_IsStatus').checked = data.isStatus;
                    editModal.show();
                })
                .catch(error => {
                    alert('Error loading menu details');
                    console.error('Error:', error);
                });
        }
    </script>
}

@section Styles {
    <style>
        .card {
            border-radius: 15px;
            overflow: hidden;
        }

        .btn-outline-primary {
            color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .btn-outline-primary:hover {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            color: white;
        }

        .badge {
            padding: 0.5em 1em;
            border-radius: 30px;
            font-weight: 500;
        }

        .modal-content {
            border-radius: 15px;
        }

        .form-control {
            border-radius: 8px;
        }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(255, 71, 87, 0.25);
        }
    </style>
}