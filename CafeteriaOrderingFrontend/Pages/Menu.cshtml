@page
@model CafeteriaOrderingFrontend.Pages.MenuModel
@{
    ViewData["Title"] = "Menu Management";
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-transparent border-0 pb-0">
                    <div class="d-flex justify-content-between align-items-center">
                        <h6 class="text-primary mb-0">
                            <i class="fas fa-utensils me-2"></i>Menu Management
                        </h6>
                        <button class="btn btn-sm btn-primary" onclick="showCreateMenuModal()">
                            <i class="fas fa-plus me-1"></i>Create New Menu
                        </button>
                    </div>
                </div>
                <div class="card-body px-0 pt-0 pb-2">
                    @if (!string.IsNullOrEmpty(Model.Message))
                    {
                        <div class="alert alert-@(Model.IsSuccess ? "success" : "danger") alert-dismissible fade show mx-4 mt-4" role="alert">
                            @Model.Message
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <div class="table-responsive p-0">
                        <table class="table align-items-center mb-0">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Menu Name</th>
                                    <th class="text-uppercase text-secondary text-xs font-weight-bolder opacity-7 ps-2">Description</th>
                                    <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Status</th>
                                    <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Items</th>
                                    <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var menu in Model.Menus)
                                {
                                    <tr class="align-middle">
                                        <td>
                                            <div class="d-flex px-2 py-1">
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@menu.MenuName</h6>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <p class="text-sm text-secondary mb-0">@menu.Description</p>
                                        </td>
                                        <td class="align-middle text-center text-sm">
                                            <span class="badge bg-@(menu.IsStatus ?? true ? "success" : "danger") px-3 py-2">
                                                @(menu.IsStatus ?? true ? "Active" : "Inactive")
                                            </span>
                                        </td>
                                        <td class="align-middle text-center">
                                            <button class="btn btn-sm btn-outline-primary" onclick="showMenuItems(@menu.MenuId)">
                                                <i class="fas fa-list me-1"></i>@menu.MenuItems.Count Items
                                            </button>
                                        </td>
                                        <td class="align-middle text-center">
                                            <div class="d-flex justify-content-center gap-2">
                                                <button class="btn btn-link text-primary mb-0 px-2" onclick="showEditMenuModal(@menu.MenuId)" title="Edit Menu">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button class="btn btn-link text-danger mb-0 px-2" onclick="showDeleteMenuModal(@menu.MenuId)" title="Delete Menu">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Menu Items Modal -->
<div class="modal fade" id="menuItemsModal" tabindex="-1" aria-labelledby="menuItemsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content border-0 shadow">
            <div class="modal-header border-0">
                <h5 class="modal-title text-primary" id="menuItemsModalLabel">
                    <i class="fas fa-list me-2"></i>Menu Items
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex justify-content-end mb-3">
                    <button class="btn btn-sm btn-primary" onclick="showCreateMenuItemModal()">
                        <i class="fas fa-plus me-1"></i>Add Item
                    </button>
                </div>
                <div id="menuItemsContent">
                    <!-- Content will be loaded dynamically -->
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create/Edit Menu Modal -->
<div class="modal fade" id="menuModal" tabindex="-1" aria-labelledby="menuModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content border-0 shadow">
            <div class="modal-header border-0">
                <h5 class="modal-title text-primary" id="menuModalLabel">
                    <i class="fas fa-edit me-2"></i>Create Menu
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="SaveMenu">
                    <input type="hidden" id="menuId" name="menuId" />
                    <div class="mb-3">
                        <label for="menuName" class="form-label text-muted">Menu Name</label>
                        <input type="text" class="form-control border-0 bg-light" id="menuName" name="menuName" required>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label text-muted">Description</label>
                        <textarea class="form-control border-0 bg-light" id="description" name="description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="isStatus" name="isStatus" checked>
                            <label class="form-check-label" for="isStatus">Active</label>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-save me-2"></i>Save Menu
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Create/Edit Menu Item Modal -->
<div class="modal fade" id="menuItemModal" tabindex="-1" aria-labelledby="menuItemModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content border-0 shadow">
            <div class="modal-header border-0">
                <h5 class="modal-title text-primary" id="menuItemModalLabel">
                    <i class="fas fa-edit me-2"></i>Create Menu Item
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="SaveMenuItem">
                    <input type="hidden" id="itemId" name="itemId" />
                    <input type="hidden" id="menuIdForItem" name="menuId" />
                    <div class="mb-3">
                        <label for="itemName" class="form-label text-muted">Item Name</label>
                        <input type="text" class="form-control border-0 bg-light" id="itemName" name="itemName" required>
                    </div>
                    <div class="mb-3">
                        <label for="itemDescription" class="form-label text-muted">Description</label>
                        <textarea class="form-control border-0 bg-light" id="itemDescription" name="description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="price" class="form-label text-muted">Price</label>
                        <input type="number" class="form-control border-0 bg-light" id="price" name="price" step="0.01" required>
                    </div>
                    <div class="mb-3">
                        <label for="itemType" class="form-label text-muted">Item Type</label>
                        <select class="form-select border-0 bg-light" id="itemType" name="itemType" required>
                            <option value="Main Course">Main Course</option>
                            <option value="Side Dish">Side Dish</option>
                            <option value="Beverage">Beverage</option>
                            <option value="Dessert">Dessert</option>
                            <option value="Appetizer">Appetizer</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="itemIsStatus" name="isStatus" checked>
                            <label class="form-check-label" for="itemIsStatus">Active</label>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-save me-2"></i>Save Item
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showCreateMenuModal() {
            document.getElementById('menuModalLabel').innerHTML = '<i class="fas fa-plus me-2"></i>Create Menu';
            document.getElementById('menuId').value = '';
            document.getElementById('menuName').value = '';
            document.getElementById('description').value = '';
            document.getElementById('isStatus').checked = true;
            new bootstrap.Modal(document.getElementById('menuModal')).show();
        }

        function showEditMenuModal(menuId) {
            document.getElementById('menuModalLabel').innerHTML = '<i class="fas fa-edit me-2"></i>Edit Menu';
            // Fetch menu details and populate form
            fetch(`?handler=GetMenu&menuId=${menuId}`)
                .then(response => response.json())
                .then(menu => {
                    document.getElementById('menuId').value = menu.menuId;
                    document.getElementById('menuName').value = menu.menuName;
                    document.getElementById('description').value = menu.description;
                    document.getElementById('isStatus').checked = menu.isStatus;
                    new bootstrap.Modal(document.getElementById('menuModal')).show();
                })
                .catch(error => {
                    console.error('Error fetching menu details:', error);
                    alert('Error loading menu details. Please try again.');
                });
        }

        function showDeleteMenuModal(menuId) {
            if (confirm('Are you sure you want to delete this menu?')) {
                document.getElementById('menuId').value = menuId;
                document.getElementById('deleteMenuForm').submit();
            }
        }

        function showMenuItems(menuId) {
            // Show loading state
            document.getElementById('menuItemsContent').innerHTML = `
                <div class="text-center py-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            `;
            document.getElementById('menuIdForItem').value = menuId;
            new bootstrap.Modal(document.getElementById('menuItemsModal')).show();

            fetch(`?handler=GetMenuItems&menuId=${menuId}`, {
                headers: {
                    'Accept': 'application/json'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.text().then(text => {
                    try {
                        return JSON.parse(text);
                    } catch (e) {
                        console.error('Response text:', text);
                        throw new TypeError('Response was not valid JSON');
                    }
                });
            })
            .then(data => {
                if (!data.success) {
                    throw new Error(data.error || 'Failed to load menu items');
                }
                
                const items = data.items;
                if (!items || !Array.isArray(items)) {
                    throw new Error('Invalid menu items data');
                }

                const content = `
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Item Name</th>
                                    <th>Type</th>
                                    <th class="text-end">Price</th>
                                    <th class="text-center">Status</th>
                                    <th class="text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${items.map(item => `
                                    <tr>
                                        <td>
                                            <div class="d-flex flex-column">
                                                <h6 class="mb-0">${item.itemName}</h6>
                                                <small class="text-muted">${item.description}</small>
                                            </div>
                                        </td>
                                        <td>
                                            <span class="badge bg-info">${item.itemType}</span>
                                        </td>
                                        <td class="text-end">$${item.price.toFixed(2)}</td>
                                        <td class="text-center">
                                            <span class="badge bg-${item.isStatus ? 'success' : 'danger'}">
                                                ${item.isStatus ? 'Active' : 'Inactive'}
                                            </span>
                                        </td>
                                        <td class="text-center">
                                            <div class="d-flex justify-content-center gap-2">
                                                <button class="btn btn-link text-primary mb-0 px-2" onclick="showEditMenuItemModal(${item.itemId})" title="Edit Item">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button class="btn btn-link text-danger mb-0 px-2" onclick="showDeleteMenuItemModal(${item.itemId})" title="Delete Item">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                `).join('')}
                            </tbody>
                        </table>
                    </div>
                `;
                document.getElementById('menuItemsContent').innerHTML = content;
            })
            .catch(error => {
                console.error('Error fetching menu items:', error);
                document.getElementById('menuItemsContent').innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-circle me-2"></i>
                        ${error.message || 'Error loading menu items. Please try again.'}
                    </div>
                `;
            });
        }

        function showCreateMenuItemModal() {
            document.getElementById('menuItemModalLabel').innerHTML = '<i class="fas fa-plus me-2"></i>Create Menu Item';
            document.getElementById('itemId').value = '';
            document.getElementById('itemName').value = '';
            document.getElementById('itemDescription').value = '';
            document.getElementById('price').value = '';
            document.getElementById('itemType').value = 'Main Course';
            document.getElementById('itemIsStatus').checked = true;
            new bootstrap.Modal(document.getElementById('menuItemModal')).show();
        }

        function showEditMenuItemModal(itemId) {
            document.getElementById('menuItemModalLabel').innerHTML = '<i class="fas fa-edit me-2"></i>Edit Menu Item';
            // Fetch item details and populate form
            fetch(`?handler=GetMenuItem&itemId=${itemId}`)
                .then(response => response.json())
                .then(item => {
                    document.getElementById('itemId').value = item.itemId;
                    document.getElementById('itemName').value = item.itemName;
                    document.getElementById('itemDescription').value = item.description;
                    document.getElementById('price').value = item.price;
                    document.getElementById('itemType').value = item.itemType;
                    document.getElementById('itemIsStatus').checked = item.isStatus;
                    new bootstrap.Modal(document.getElementById('menuItemModal')).show();
                })
                .catch(error => {
                    console.error('Error fetching item details:', error);
                    alert('Error loading item details. Please try again.');
                });
        }

        function showDeleteMenuItemModal(itemId) {
            if (confirm('Are you sure you want to delete this menu item?')) {
                document.getElementById('itemId').value = itemId;
                document.getElementById('deleteMenuItemForm').submit();
            }
        }
    </script>
}

@section Styles {
    <style>
        .card {
            border-radius: 15px;
            overflow: hidden;
        }

        .btn-outline-primary {
            color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .btn-outline-primary:hover {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            color: white;
        }

        .badge {
            padding: 0.5em 1em;
            border-radius: 30px;
            font-weight: 500;
        }

        .modal-content {
            border-radius: 15px;
        }

        .form-control {
            border-radius: 8px;
        }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(255, 71, 87, 0.25);
        }

        .spinner-border {
            width: 1rem;
            height: 1rem;
            margin-right: 0.5rem;
        }
    </style>
}